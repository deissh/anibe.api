version: "3.4"

networks:
  proxy:
    # driver: overlay

services:
  api:
    image: "aniberu/api:${ANIBE_API_TAG:-latest}"
    build: .
    environment:
      HOST: api.api.localhost
      PORT: 80
      NODE_ENV: production
      SENDGRID_KEY: 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
      MASTER_KEY: V3T0wJL6wuVk502cPq1cN7mgN1FJvYdR
      JWT_SECRET: aCjiMuoMpAO2dfk0koKO1uJJ5aUCyaVv
    links:
      - mongo
    deploy:
      labels:
        - "traefik.port=8080"
        - "traefik.enable=true"
        - "traefik.docker.network=app"
        - "traefik.frontend.rule=Host:localhost"
      placement:
        constraints:
          - node.role==worker
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any

  mongo:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/mongodb
    volumes:
      - /data/mongodb:/data/mongodb
    deploy:
      placement:
        constraints:
          - node.role==manager
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any

  # Traefik
  proxy:
    image: "traefik:${TRAEFIK_TAG:-latest}"
    command: --web --docker --docker.domain=localhost --docker.watch --accessLog
    networks:
      - proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - api
    deploy:
      placement:
        constraints:
          - node.role==manager
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
